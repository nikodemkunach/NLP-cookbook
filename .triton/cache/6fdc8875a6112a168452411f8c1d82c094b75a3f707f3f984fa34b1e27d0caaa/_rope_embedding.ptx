//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	_rope_embedding

.visible .entry _rope_embedding(
	.param .u64 _rope_embedding_param_0,
	.param .u32 _rope_embedding_param_1,
	.param .u64 _rope_embedding_param_2,
	.param .u32 _rope_embedding_param_3,
	.param .u64 _rope_embedding_param_4,
	.param .u32 _rope_embedding_param_5,
	.param .u32 _rope_embedding_param_6
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<35>;
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<17>;
$L__func_begin0:

	.loc	1 39 34
	// begin inline asm
	mov.u32 %r12, %ctaid.x;
	// end inline asm
	.loc	1 40 40
	// begin inline asm
	mov.u32 %r13, %ctaid.y;
	// end inline asm
	ld.param.u64 	%rd4, [_rope_embedding_param_2];
	ld.param.u32 	%r18, [_rope_embedding_param_3];
	.loc	1 41 32
	mov.u32 	%r19, %tid.x;
	and.b32  	%r3, %r19, 127;
	ld.param.u64 	%rd5, [_rope_embedding_param_4];
	ld.param.u32 	%r20, [_rope_embedding_param_6];
	.loc	1 45 41
	rem.s32 	%r21, %r12, %r20;
	ld.param.u32 	%r22, [_rope_embedding_param_5];
	.loc	1 45 49
	mul.lo.s32 	%r23, %r21, %r22;
	.loc	1 45 25
	mul.wide.s32 	%rd6, %r23, 4;
	add.s64 	%rd7, %rd5, %rd6;
	.loc	1 46 37
	mul.wide.u32 	%rd8, %r3, 4;
	add.s64 	%rd2, %rd7, %rd8;
	mov.b32 	%r15, 0;
	mov.pred 	%p1, -1;
	.loc	1 45 19
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r14, %r15;
	// end inline asm
	.loc	1 47 49
	mul.lo.s32 	%r24, %r21, %r18;
	.loc	1 47 25
	mul.wide.s32 	%rd9, %r24, 4;
	add.s64 	%rd10, %rd4, %rd9;
	.loc	1 48 37
	add.s64 	%rd3, %rd10, %rd8;
	.loc	1 47 19
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.b32 { %r16 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r16, %r15;
	// end inline asm
	.loc	1 56 39
	shl.b32 	%r34, %r13, 2;
	.loc	1 57 33
	add.s32 	%r25, %r34, 4;
	.loc	1 57 51
	min.s32 	%r5, %r25, 16;
	.loc	1 60 31
	setp.ge.s32 	%p5, %r34, %r5;
	@%p5 bra 	$L__BB0_3;
	.loc	1 0 31
	ld.param.u32 	%r11, [_rope_embedding_param_1];
	ld.param.u64 	%rd1, [_rope_embedding_param_0];
	mov.b32 	%f1, %r14;
	mov.b32 	%f2, %r16;
	.loc	1 60 31
	shl.b32 	%r26, %r13, 10;
	mad.lo.s32 	%r27, %r12, %r11, %r26;
	add.s32 	%r33, %r27, %r3;
	mov.u16 	%rs2, 0;
$L__BB0_2:
	.loc	1 65 25
	add.s32 	%r32, %r33, 128;
	mul.wide.s32 	%rd15, %r33, 2;
	add.s64 	%rd11, %rd1, %rd15;
	.loc	1 65 21
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p1 ld.global.b16 { %rs1 }, [ %rd11 + 0 ];
	@!%p1 mov.u16 %rs1, %rs2;
	// end inline asm
	.loc	1 65 61
	// begin inline asm
	cvt.f32.bf16 %r28, %rs1;
	// end inline asm
	mov.b32 	%f3, %r28;
	.loc	1 66 25
	mul.wide.s32 	%rd16, %r32, 2;
	add.s64 	%rd12, %rd1, %rd16;
	.loc	1 66 21
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p1 ld.global.b16 { %rs4 }, [ %rd12 + 0 ];
	@!%p1 mov.u16 %rs4, %rs2;
	// end inline asm
	.loc	1 66 61
	// begin inline asm
	cvt.f32.bf16 %r29, %rs4;
	// end inline asm
	mov.b32 	%f4, %r29;
	.loc	1 68 43
	mul.f32 	%f5, %f4, %f1;
	.loc	1 68 40
	neg.f32 	%f6, %f5;
	fma.rn.f32 	%f7, %f3, %f2, %f6;
	.loc	1 68 30
	mov.b32 	%r30, %f7;
	// begin inline asm
	cvt.rn.bf16.f32 %rs7, %r30;
	// end inline asm
	// begin inline asm
	@%p1 st.global.b16 [ %rd11 + 0 ], { %rs7 };
	// end inline asm
	.loc	1 69 33
	mul.f32 	%f8, %f4, %f2;
	.loc	1 69 40
	fma.rn.f32 	%f9, %f3, %f1, %f8;
	.loc	1 69 30
	mov.b32 	%r31, %f9;
	// begin inline asm
	cvt.rn.bf16.f32 %rs9, %r31;
	// end inline asm
	// begin inline asm
	@%p1 st.global.b16 [ %rd12 + 0 ], { %rs9 };
	// end inline asm
	.loc	1 60 31
	add.s32 	%r34, %r34, 1;
	add.s32 	%r33, %r33, 256;
	setp.lt.s32 	%p12, %r34, %r5;
	@%p12 bra 	$L__BB0_2;
$L__BB0_3:
	.loc	1 70 4
	ret;
$L__tmp0:
$L__func_end0:

}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.11/site-packages/unsloth/kernels/rope_embedding.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 138
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 114
.b8 111
.b8 112
.b8 101
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 49
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 117
.b8 110
.b8 115
.b8 108
.b8 111
.b8 116
.b8 104
.b8 47
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 115
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
